name: Release

on:
  workflow_dispatch:
    inputs:
      release_type:
        description: "Release type"
        required: true
        type: choice
        options:
          - major
          - minor
          - patch

env:
  SETUP_NODE_NODE_VERSION: 19.7

jobs:
  release:
    runs-on: ubuntu-latest
    name: Release
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.SETUP_NODE_NODE_VERSION }}
          cache: "npm"
      - name: git config
        run: |
          git config user.name "${GITHUB_ACTOR}"
          git config user.email "${GITHUB_ACTOR}@users.noreply.github.com"
      - name: Install dependencies
        run: |
          npm ci
      - name: Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          npm run release -- --verbose --increment=${{ github.event.inputs.release_type }} --ci
      - name: Remember release version
        id: remember_release_version
        run: |
          echo "release_version=$(node -p 'require("./package.json").version')" >> $GITHUB_OUTPUT
    outputs:
      release_version: ${{ steps.remember_release_version.outputs.release_version }}

  compile:
    name: Compile
    needs: [release]
    runs-on: ubuntu-latest
    steps:
      - name: Download release
        uses: robinraju/release-downloader@v1.8
        with:
          tag: ${{ needs.release.outputs.release_version }}
          tarBall: true
      - name: Unpack release
        run: tar -xzf ./${{github.event.repository.name}}-${{ needs.release.outputs.release_version }}.tar.gz
      - name: Remove tarball
        run: rm ./${{github.event.repository.name}}-${{ needs.release.outputs.release_version }}.tar.gz
      - name: Move the files to the current directory
        run: |
          shopt -s dotglob
          mv ./${{github.event.repository.owner.login}}-${{github.event.repository.name}}-*/* ./
          shopt -u dotglob
          rm -rf ./${{github.event.repository.owner.login}}-${{github.event.repository.name}}-*/
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.SETUP_NODE_NODE_VERSION }}
          cache: "npm"
      - name: Install dependencies
        run: |
          npm ci
      - name: Compile
        run: |
          npm run compile
      - name: Upload dist
        uses: actions/upload-artifact@v3
        with:
          name: dist
          path: dist
    outputs:
      release_version: ${{ needs.release.outputs.release_version }}

  publish_to_docker_registry:
    name: Publish to Docker registry
    needs: [compile]
    runs-on: ubuntu-latest
    steps:
      - name: Download release
        uses: robinraju/release-downloader@v1.8
        with:
          tag: ${{ needs.compile.outputs.release_version }}
          tarBall: true
      - name: Unpack release
        run: tar -xzf ./${{github.event.repository.name}}-${{ needs.compile.outputs.release_version }}.tar.gz
      - name: Remove tarball
        run: rm ./${{github.event.repository.name}}-${{ needs.compile.outputs.release_version }}.tar.gz
      - name: Move the files to the current directory
        run: |
          shopt -s dotglob
          mv ./${{github.event.repository.owner.login}}-${{github.event.repository.name}}-*/* ./
          shopt -u dotglob
          rm -rf ./${{github.event.repository.owner.login}}-${{github.event.repository.name}}-*/
      - name: Download dist
        uses: actions/download-artifact@v3
        with:
          name: dist
          path: dist
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Docker registry
        uses: docker/login-action@v3
        with:
          username: ${{secrets.DOCKER_REGISTRY_USERNAME}}
          password: ${{secrets.DOCKER_REGISTRY_PASSWORD}}
          registry: ${{vars.DOCKER_REGISTRY_HOST}}
      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{vars.DOCKER_REGISTRY_HOST}}/${{vars.DOCKER_REGISTRY_REPOSITORY_NAME}}:${{ needs.compile.outputs.release_version }}

  publish_to_npm_registry:
    name: Publish to npm registry
    needs: [compile]
    runs-on: ubuntu-latest
    steps:
      - name: Download release
        uses: robinraju/release-downloader@v1.8
        with:
          tag: ${{ needs.compile.outputs.release_version }}
          tarBall: true
      - name: Unpack release
        run: tar -xzf ./${{github.event.repository.name}}-${{ needs.compile.outputs.release_version }}.tar.gz
      - name: Remove tarball
        run: rm ./${{github.event.repository.name}}-${{ needs.compile.outputs.release_version }}.tar.gz
      - name: Move the files to the current directory
        run: |
          shopt -s dotglob
          mv ./${{github.event.repository.owner.login}}-${{github.event.repository.name}}-*/* ./
          shopt -u dotglob
          rm -rf ./${{github.event.repository.owner.login}}-${{github.event.repository.name}}-*/
      - name: Download dist
        uses: actions/download-artifact@v3
        with:
          name: dist
          path: dist
      - name: Publish to npm registry
        run: |
          npm publish --registry=${{vars.NPM_REGISTRY_URL}} --//$(echo -n ${{vars.NPM_REGISTRY_URL}} | sed 's/^[^\/]*\/\///'):_authToken=${{secrets.NPM_REGISTRY_ACCESS_TOKEN}}
